Index: app/src/main/java/com/example/whizzz/view/fragments/UserFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.whizzz.view.fragments;\r\n\r\nimport android.content.Context;\r\nimport android.os.Bundle;\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.EditText;\r\n\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProvider;\r\nimport androidx.recyclerview.widget.DividerItemDecoration;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.whizzz.R;\r\nimport com.example.whizzz.services.model.Users;\r\nimport com.example.whizzz.view.adapters.UserFragmentAdapter;\r\nimport com.example.whizzz.viewModel.DatabaseViewModel;\r\nimport com.google.firebase.database.DataSnapshot;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\n\r\npublic class UserFragment extends Fragment {\r\n    private Context context;\r\n    private DatabaseViewModel databaseViewModel;\r\n    private ArrayList<Users> mUSer;\r\n    private String currentUserId;\r\n    private RecyclerView recyclerView;\r\n    private UserFragmentAdapter userFragmentAdapter;\r\n    EditText et_search;\r\n\r\n    public UserFragment(Context context) {\r\n        this.context = context;\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\r\n\r\n        View view = inflater.inflate(R.layout.fragment_user, container, false);\r\n        init(view);\r\n        fetchingAllUserNAme();\r\n        return view;\r\n    }\r\n\r\n\r\n    private void fetchingAllUserNAme() {\r\n        databaseViewModel.fetchingUserDataCurrent();\r\n        databaseViewModel.fetchUserCurrentData.observe(this, new Observer<DataSnapshot>() {\r\n            @Override\r\n            public void onChanged(DataSnapshot dataSnapshot) {\r\n                Users users = dataSnapshot.getValue(Users.class);\r\n                assert users != null;\r\n                currentUserId = users.getId();\r\n            }\r\n        });\r\n\r\n        databaseViewModel.fetchUserByNameAll();\r\n        databaseViewModel.fetchUserNames.observe(this, new Observer<DataSnapshot>() {\r\n            @Override\r\n            public void onChanged(DataSnapshot dataSnapshot) {\r\n                if (et_search.getText().toString().equals(\"\")) {\r\n                    mUSer.clear();\r\n                    for (DataSnapshot snapshot : dataSnapshot.getChildren()) {\r\n                        Users user = snapshot.getValue(Users.class);\r\n\r\n                        assert user != null;\r\n                        if (!currentUserId.equals(user.getId())) {\r\n                            mUSer.add(user);\r\n\r\n                        }\r\n                        userFragmentAdapter = new UserFragmentAdapter(mUSer, context, false);\r\n                        recyclerView.setAdapter(userFragmentAdapter);\r\n\r\n                    }\r\n\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void init(View view) {\r\n        databaseViewModel = new ViewModelProvider(this, ViewModelProvider.AndroidViewModelFactory\r\n                .getInstance(Objects.requireNonNull(getActivity()).getApplication()))\r\n                .get(DatabaseViewModel.class);\r\n\r\n        recyclerView = view.findViewById(R.id.user_list_recycle_view);\r\n        recyclerView.setLayoutManager(new LinearLayoutManager(context));\r\n        DividerItemDecoration dividerItemDecoration = new DividerItemDecoration(recyclerView.getContext(), DividerItemDecoration.VERTICAL);\r\n        recyclerView.addItemDecoration(dividerItemDecoration);\r\n        mUSer = new ArrayList<>();\r\n        et_search = view.findViewById(R.id.et_search);\r\n        et_search.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                searchUsers(s.toString().toLowerCase());\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void searchUsers(String searchText) {\r\n        databaseViewModel.fetchSearchedUser(searchText);\r\n        databaseViewModel.fetchSearchUser.observe(this, new Observer<DataSnapshot>() {\r\n            @Override\r\n            public void onChanged(DataSnapshot dataSnapshot) {\r\n                mUSer.clear();\r\n                for (DataSnapshot snapshot : dataSnapshot.getChildren()) {\r\n                    Users users = snapshot.getValue(Users.class);\r\n\r\n                    assert users != null;\r\n                    if (!users.getId().equals(currentUserId)) {\r\n                        mUSer.add(users);\r\n                    }\r\n\r\n                }\r\n                userFragmentAdapter = new UserFragmentAdapter(mUSer, context, false);\r\n                recyclerView.setAdapter(userFragmentAdapter);\r\n            }\r\n        });\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/whizzz/view/fragments/UserFragment.java	(revision 47df754d13cd47cff79f215a611d739c8aa6a415)
+++ app/src/main/java/com/example/whizzz/view/fragments/UserFragment.java	(date 1616647448708)
@@ -69,9 +69,16 @@
                         Users user = snapshot.getValue(Users.class);
 
                         assert user != null;
-                        if (!currentUserId.equals(user.getId())) {
-                            mUSer.add(user);
+                        if (!(user.getEmailId() == null) &&
+                                (user.getBio() == null) &&
+                                (user.getUsername() == null) &&
+                                (user.getTimestamp() == null) &&
+                                (user.getImageUrl() == null)
+                        ) {
+                            if (!currentUserId.equals(user.getId())) {
+                                mUSer.add(user);
 
+                            }
                         }
                         userFragmentAdapter = new UserFragmentAdapter(mUSer, context, false);
                         recyclerView.setAdapter(userFragmentAdapter);
@@ -123,8 +130,16 @@
                     Users users = snapshot.getValue(Users.class);
 
                     assert users != null;
-                    if (!users.getId().equals(currentUserId)) {
-                        mUSer.add(users);
+
+                    if (!((users.getEmailId().isEmpty() && users.getEmailId() == null) &&
+                            (users.getBio().isEmpty() && users.getBio() == null) &&
+                            (users.getUsername().isEmpty() && users.getUsername() == null) &&
+                            (users.getTimestamp().isEmpty() && users.getTimestamp() == null) &&
+                            (users.getImageUrl().isEmpty() && users.getImageUrl() == null))
+                    ) {
+                        if (!users.getId().equals(currentUserId)) {
+                            mUSer.add(users);
+                        }
                     }
 
                 }
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"NullableNotNullManager\">\r\n    <option name=\"myDefaultNullable\" value=\"org.jetbrains.annotations.Nullable\" />\r\n    <option name=\"myDefaultNotNull\" value=\"androidx.annotation.NonNull\" />\r\n    <option name=\"myNullables\">\r\n      <value>\r\n        <list size=\"12\">\r\n          <item index=\"0\" class=\"java.lang.String\" itemvalue=\"org.jetbrains.annotations.Nullable\" />\r\n          <item index=\"1\" class=\"java.lang.String\" itemvalue=\"javax.annotation.Nullable\" />\r\n          <item index=\"2\" class=\"java.lang.String\" itemvalue=\"javax.annotation.CheckForNull\" />\r\n          <item index=\"3\" class=\"java.lang.String\" itemvalue=\"edu.umd.cs.findbugs.annotations.Nullable\" />\r\n          <item index=\"4\" class=\"java.lang.String\" itemvalue=\"android.support.annotation.Nullable\" />\r\n          <item index=\"5\" class=\"java.lang.String\" itemvalue=\"androidx.annotation.Nullable\" />\r\n          <item index=\"6\" class=\"java.lang.String\" itemvalue=\"android.annotation.Nullable\" />\r\n          <item index=\"7\" class=\"java.lang.String\" itemvalue=\"androidx.annotation.RecentlyNullable\" />\r\n          <item index=\"8\" class=\"java.lang.String\" itemvalue=\"org.checkerframework.checker.nullness.qual.Nullable\" />\r\n          <item index=\"9\" class=\"java.lang.String\" itemvalue=\"org.checkerframework.checker.nullness.compatqual.NullableDecl\" />\r\n          <item index=\"10\" class=\"java.lang.String\" itemvalue=\"org.checkerframework.checker.nullness.compatqual.NullableType\" />\r\n          <item index=\"11\" class=\"java.lang.String\" itemvalue=\"com.android.annotations.Nullable\" />\r\n        </list>\r\n      </value>\r\n    </option>\r\n    <option name=\"myNotNulls\">\r\n      <value>\r\n        <list size=\"11\">\r\n          <item index=\"0\" class=\"java.lang.String\" itemvalue=\"org.jetbrains.annotations.NotNull\" />\r\n          <item index=\"1\" class=\"java.lang.String\" itemvalue=\"javax.annotation.Nonnull\" />\r\n          <item index=\"2\" class=\"java.lang.String\" itemvalue=\"edu.umd.cs.findbugs.annotations.NonNull\" />\r\n          <item index=\"3\" class=\"java.lang.String\" itemvalue=\"android.support.annotation.NonNull\" />\r\n          <item index=\"4\" class=\"java.lang.String\" itemvalue=\"androidx.annotation.NonNull\" />\r\n          <item index=\"5\" class=\"java.lang.String\" itemvalue=\"android.annotation.NonNull\" />\r\n          <item index=\"6\" class=\"java.lang.String\" itemvalue=\"androidx.annotation.RecentlyNonNull\" />\r\n          <item index=\"7\" class=\"java.lang.String\" itemvalue=\"org.checkerframework.checker.nullness.qual.NonNull\" />\r\n          <item index=\"8\" class=\"java.lang.String\" itemvalue=\"org.checkerframework.checker.nullness.compatqual.NonNullDecl\" />\r\n          <item index=\"9\" class=\"java.lang.String\" itemvalue=\"org.checkerframework.checker.nullness.compatqual.NonNullType\" />\r\n          <item index=\"10\" class=\"java.lang.String\" itemvalue=\"com.android.annotations.NonNull\" />\r\n        </list>\r\n      </value>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 47df754d13cd47cff79f215a611d739c8aa6a415)
+++ .idea/misc.xml	(date 1614236877923)
@@ -5,7 +5,7 @@
     <option name="myDefaultNotNull" value="androidx.annotation.NonNull" />
     <option name="myNullables">
       <value>
-        <list size="12">
+        <list size="15">
           <item index="0" class="java.lang.String" itemvalue="org.jetbrains.annotations.Nullable" />
           <item index="1" class="java.lang.String" itemvalue="javax.annotation.Nullable" />
           <item index="2" class="java.lang.String" itemvalue="javax.annotation.CheckForNull" />
@@ -18,12 +18,15 @@
           <item index="9" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.compatqual.NullableDecl" />
           <item index="10" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.compatqual.NullableType" />
           <item index="11" class="java.lang.String" itemvalue="com.android.annotations.Nullable" />
+          <item index="12" class="java.lang.String" itemvalue="org.eclipse.jdt.annotation.Nullable" />
+          <item index="13" class="java.lang.String" itemvalue="io.reactivex.annotations.Nullable" />
+          <item index="14" class="java.lang.String" itemvalue="io.reactivex.rxjava3.annotations.Nullable" />
         </list>
       </value>
     </option>
     <option name="myNotNulls">
       <value>
-        <list size="11">
+        <list size="14">
           <item index="0" class="java.lang.String" itemvalue="org.jetbrains.annotations.NotNull" />
           <item index="1" class="java.lang.String" itemvalue="javax.annotation.Nonnull" />
           <item index="2" class="java.lang.String" itemvalue="edu.umd.cs.findbugs.annotations.NonNull" />
@@ -35,11 +38,14 @@
           <item index="8" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.compatqual.NonNullDecl" />
           <item index="9" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.compatqual.NonNullType" />
           <item index="10" class="java.lang.String" itemvalue="com.android.annotations.NonNull" />
+          <item index="11" class="java.lang.String" itemvalue="org.eclipse.jdt.annotation.NonNull" />
+          <item index="12" class="java.lang.String" itemvalue="io.reactivex.annotations.NonNull" />
+          <item index="13" class="java.lang.String" itemvalue="io.reactivex.rxjava3.annotations.NonNull" />
         </list>
       </value>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: app/src/main/java/com/example/whizzz/view/adapters/ViewPagerAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.whizzz.view.adapters;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentStatePagerAdapter;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class ViewPagerAdapter extends FragmentStatePagerAdapter {\r\n\r\n    private final List<Fragment> listFragment = new ArrayList<>();\r\n    private final List<String> listTitles = new ArrayList<>();\r\n\r\n    public ViewPagerAdapter(@NonNull FragmentManager fm, int behavior) {\r\n        super(fm, behavior);\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public Fragment getItem(int position) {\r\n       return listFragment.get(position);\r\n    }\r\n\r\n    @Override\r\n    public int getCount() {\r\n        return listTitles.size();\r\n    }\r\n\r\n\r\n    public void addFragment(Fragment fragment, String title) {\r\n        listFragment.add(fragment);\r\n        listTitles.add(title);\r\n    }\r\n\r\n    @Nullable\r\n    @Override\r\n    public CharSequence getPageTitle(int position) {\r\n        return listTitles.get(position);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/whizzz/view/adapters/ViewPagerAdapter.java	(revision 47df754d13cd47cff79f215a611d739c8aa6a415)
+++ app/src/main/java/com/example/whizzz/view/adapters/ViewPagerAdapter.java	(date 1614325857230)
@@ -40,4 +40,5 @@
     public CharSequence getPageTitle(int position) {
         return listTitles.get(position);
     }
+
 }
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/compiler.xml	(date 1614236878190)
+++ .idea/compiler.xml	(date 1614236878190)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <bytecodeTargetLevel target="1.8" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"PLATFORM\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision 47df754d13cd47cff79f215a611d739c8aa6a415)
+++ .idea/gradle.xml	(date 1614236657643)
@@ -14,6 +14,7 @@
           </set>
         </option>
         <option name="resolveModulePerSourceSet" value="false" />
+        <option name="useQualifiedModuleNames" value="true" />
       </GradleProjectSettings>
     </option>
   </component>
